version: '3.8'

services:
  # FIWARE Orion Context Broker
  orion:
    image: fiware/orion:3.7.0
    hostname: orion
    container_name: fiware-orion
    depends_on:
      - mongo
    ports:
      - "1026:1026"
    command: -dbhost mongo -logLevel DEBUG
    healthcheck:
      test: curl --fail -s http://localhost:1026/version || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - fiware_network

  # MongoDB - required by Orion
  mongo:
    image: mongo:4.4
    hostname: mongo
    container_name: db-mongo
    expose:
      - "27017"
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - fiware_network
    command: --nojournal

  # IoT Agent for JSON
  iot-agent:
    image: fiware/iotagent-json:latest
    hostname: iot-agent
    container_name: fiware-iot-agent
    depends_on:
      - mongo
      - orion
    ports:
      - "4041:4041"
    environment:
      - IOTA_CB_HOST=orion
      - IOTA_CB_PORT=1026
      - IOTA_NORTH_PORT=4041
      - IOTA_REGISTRY_TYPE=mongodb
      - IOTA_LOG_LEVEL=DEBUG
      - IOTA_MONGODB_HOST=mongo
      - IOTA_MONGODB_PORT=27017
      - IOTA_MONGODB_DB=iotagentjson
    networks:
      - fiware_network

  # Apache NiFi for data flow
  nifi:
    image: apache/nifi:latest
    hostname: nifi
    container_name: nifi
    ports:
      - "8080:8080"
    environment:
      - NIFI_WEB_HTTP_PORT=8080
    volumes:
      - nifi_data:/opt/nifi/nifi-current/data
      - ./nifi/conf:/opt/nifi/nifi-current/conf
      - ./data:/data
    networks:
      - fiware_network

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: miso-frontend
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - orion
      - nifi
    networks:
      - fiware_network

networks:
  fiware_network:
    driver: bridge

volumes:
  mongo_data:
  nifi_data: